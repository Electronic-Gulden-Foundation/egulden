image: ubuntu:trusty

variables:
  BUILD_DEPS: curl ca-certificates build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils
  COMMON_DEPS: python python-pip python-dev python-setuptools python-zmq openjdk-7-jre-headless
  OUTDIR: $CI_PROJECT_DIR/out
  LOGDIR: $CI_PROJECT_DIR/out/logs

cache:
  key: "$CI_JOB_NAME"
  paths:
  - depends/

before_script:
  - mkdir -p $OUTDIR
  - mkdir -p $LOGDIR

build:linux-64:
  stage: build
  variables:
    HOST: x86_64-unknown-linux-gnu
    LD_LIBRARY_PATH: $CI_PROJECT_DIR/depends/$HOST/lib
    PACKAGES: $BUILD_DEPS $COMMON_DEPS bc
  script:
  - apt-get update
  - apt-get install -y --no-install-recommends -qq $PACKAGES
  - cd ./depends
  - make HOST=$HOST -j4 | tee $LOGDIR/depends.log
  - cd ..
  - ./autogen.sh
  - ./configure --prefix=`pwd`/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib | tee $LOGDIR/configure.log
  - make -j4 install | tee $LOGDIR/build.log
  - strip $OUTDIR/*
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - $OUTDIR

build:linux-32:
  stage: build
  variables:
    HOST: i686-pc-linux-gnu
    LD_LIBRARY_PATH: $CI_PROJECT_DIR/depends/$HOST/lib
    PACKAGES: $BUILD_DEPS $COMMON_DEPS g++-multilib libc6-dev-i386 bc libx11-6:i386 libfontconfig1-dev:i386 libfreetype6-dev:i386 libx11-dev:i386 libxcursor-dev:i386 libxext-dev:i386 libxfixes-dev:i386 libxft-dev:i386 libxi-dev:i386 libxrandr-dev:i386 libxrender-dev:i386
  script:
  - dpkg --add-architecture i386
  - apt-get update
  - apt-get install -y --no-install-recommends -qq $PACKAGES
  - cd ./depends
  - make HOST=$HOST -j4 | tee $LOGDIR/depends.log
  - cd ..
  - ./autogen.sh
  - ./configure --prefix=`pwd`/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib | tee $LOGDIR/configure.log
  - make -j4 install | tee $LOGDIR/build.log
  - strip $OUTDIR/*
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - $OUTDIR

build:osx:
  stage: build
  variables:
    HOST: x86_64-apple-darwin11
    LD_LIBRARY_PATH: $CI_PROJECT_DIR/depends/$HOST/lib
    OSX_SDK_URL: https://bitcoincore.org/depends-sources/sdks/MacOSX10.11.sdk.tar.gz
    OSX_SDK_TAR: depends/sdk-sources/MacOSX10.11.sdk.tar.gz
    PACKAGES: $BUILD_DEPS $COMMON_DEPS cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools
  script:
  - apt-get update
  - apt-get install -y --no-install-recommends -qq $PACKAGES
  - pip install ez_setup
  - if [ ! -f "$OSX_SDK_TAR" ]; then mkdir -p depends/sdk-sources && curl --location --fail $OSX_SDK_URL -o $OSX_SDK_TAR; fi
  - mkdir -p depends/SDKs && tar -C depends/SDKs -xf $OSX_SDK_TAR
  - cd ./depends
  - make HOST=$HOST -j4 | tee $LOGDIR/depends.log
  - cd ..
  - ./autogen.sh
  - ./configure --prefix=`pwd`/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib | tee $LOGDIR/configure.log
  - make -j4 install | tee $LOGDIR/build.log
  - strip $OUTDIR/*
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - $OUTDIR

build:win-64:
  stage: build
  variables:
    HOST: x86_64-w64-mingw32
    LD_LIBRARY_PATH: $CI_PROJECT_DIR/depends/$HOST/lib
    PACKAGES: $BUILD_DEPS $COMMON_DEPS nsis wine bc g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev
  script:
  - dpkg --add-architecture i386
  - apt-get update
  - apt-get install -y --no-install-recommends -qq $PACKAGES
  - cd ./depends
  - make HOST=$HOST -j4 | tee $LOGDIR/depends.log
  - cd ..
  - ./autogen.sh
  - ./configure --prefix=`pwd`/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib | tee $LOGDIR/configure.log
  - make -j4 install | tee $LOGDIR/build.log
  - strip $OUTDIR/*
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - $OUTDIR

test:linux-64:
  stage: test
  dependencies:
  - build:linux-64
  script:
  - $OUTDIR/test_egulden
  - $OUTDIR/test_egulden-qt

test:linux-32:
  stage: test
  dependencies:
  - build:linux-32
  script:
  - $OUTDIR/test_egulden
  - $OUTDIR/test_egulden-qt
